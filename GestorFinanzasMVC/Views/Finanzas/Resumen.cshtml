@model (IEnumerable<GestorFinanzasMVC.Models.Ingreso> Ingresos, IEnumerable<GestorFinanzasMVC.Models.Gasto> Gastos)

@{
    ViewData["Title"] = "Resumen Financiero";
}

<h2 class="text-center mb-4">
    <i class="bi bi-bar-chart-line-fill"></i> Resumen Financiero
 </h2>

<div class="row">
    <div class="col-md-6">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">Ingresos</h5>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var ingreso in Model.Ingresos)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@ingreso.Descripcion</span>
                        <span>
                            <strong>₡@ingreso.Monto</strong>
                            <button class="btn btn-sm btn-outline-danger ms-2" onclick="eliminarIngreso(@ingreso.IngresoId)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </span>
                    </li>
                }

            </ul>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-danger text-white">
                <h5 class="mb-0">Gastos</h5>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var gasto in Model.Gastos)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@gasto.Descripcion</span>
                        <span>
                            <strong>₡@gasto.Monto</strong>
                            <button class="btn btn-sm btn-outline-danger ms-2" onclick="eliminarGasto(@gasto.GastoId)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </span>
                    </li>
                }

            </ul>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        async function eliminarIngreso(id) {
            if (confirm("¿Estás seguro de eliminar este ingreso?")) {
                const res = await fetch(`/api/Ingresos/${id}`, {
                    method: 'DELETE',
                    credentials: 'include'
                });

                if (res.ok) {
                    location.reload();
                } else {
                    alert("Error al eliminar el ingreso");
                }
            }
        }

        async function eliminarGasto(id) {
            if (confirm("¿Estás seguro de eliminar este gasto?")) {
                const res = await fetch(`/api/Gastos/${id}`, {
                    method: 'DELETE',
                    credentials: 'include'
                });

                if (res.ok) {
                    location.reload();
                } else {
                    alert("Error al eliminar el gasto");
                }
            }
        }
    </script>
}
